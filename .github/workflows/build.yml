name: Build Arbiter Signer

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            output_name: arbiter-linux
            goarch: amd64
          - os: windows-latest
            output_name: arbiter-windows.exe
            goarch: amd64
          - os: macos-latest
            output_name: arbiter-macos-amd64
            goarch: amd64
          - os: macos-latest
            output_name: arbiter-macos-arm64
            goarch: arm64

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Go Mod Tidy
      run: go mod tidy

    - name: Build
      env:
        GOOS: ${{ matrix.os == 'windows-latest' && 'windows' || matrix.os == 'ubuntu-latest' && 'linux' || 'darwin' }}
        GOARCH: ${{ matrix.goarch }}
      run: go build -o ${{ matrix.output_name }} ./app/arbiter

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.output_name }}
        path: ${{ matrix.output_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Generate version
        if: github.ref == 'refs/heads/main'
        id: version
        run: |
          echo "version=$(date +'v%Y.%m.%d-%H%M')" >> $GITHUB_OUTPUT

      - name: Create Tag
        if: github.ref == 'refs/heads/main'
        uses: actions/github-script@v6
        with:
          script: |
            const version = '${{ steps.version.outputs.version }}'
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${version}`,
              sha: context.sha
            })

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name == 'main' && steps.version.outputs.version || github.ref_name }}
          files: |
            */arbiter-linux
            */arbiter-windows.exe
            */arbiter-macos-amd64
            */arbiter-macos-arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}